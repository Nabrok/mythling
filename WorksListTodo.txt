        if (deviceCurrentlyPlaying == null)
        {
          playSongOnDevice(work);
        }
        else
        {
          new AlertDialog.Builder(this)
          .setIcon(android.R.drawable.ic_dialog_alert)
          .setTitle("Device In Use")
          .setMessage(work.getLabel())
          .setPositiveButton("Preempt", new DialogInterface.OnClickListener()
          {
            public void onClick(DialogInterface dialog, int which)
            {
              deviceCurrentlyPlaying = null;
              playSongOnDevice(work);
            }
          })
          .setNeutralButton("Add to Queue", new DialogInterface.OnClickListener()
          {
            public void onClick(DialogInterface dialog, int which)
            {
              ProgressDialog pd = new ProgressDialog(getApplicationContext());
              try
              {
                List<Work> queue = worksList.getQueue(work.getType());
                if (queue == null)
                  queue = new ArrayList<Work>();
                pd.setTitle(MediaSettings.getMediaTitle(work.getType()) + " Queue");
                pd.setMessage("Adding '" + work.getLabel() + "'");
                pd.setCancelable(false);
                pd.setIndeterminate(true);
                pd.show();                
                queue.add(work);
                worksList.setQueue(work.getType(), queue);
                appData.writeQueue(work.getType(), worksList.getQueueJson(work.getType()));
                return;
              }
              catch (Exception ex)
              {
                if (BuildConfig.DEBUG)
                  Log.e(TAG, ex.getMessage(), ex);
                Toast.makeText(getApplicationContext(), "Error: " + ex.toString(), Toast.LENGTH_LONG).show();
              }
              finally
              {
                pd.dismiss();
              }
            }
          })
          .setNegativeButton("Cancel", new DialogInterface.OnClickListener()
          {
            public void onClick(DialogInterface dialog, int which)
            {
              return;
            }
          })
          .show();
        }
          
        if (getListView() != null)  // TODO what about pager activity?
        {
          String msg = (work.isMusic() ? "Playing: '" : "Loading: '") + work.getTitle() + "'";
          ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, android.R.id.text1, new String[]{msg});
          getListView().setAdapter(adapter);
        }
        
        startProgress();
        
        if (work.isMusic())
        {

        
        
          private void playSongOnDevice(Work song)
  {
    try
    {
      stopMediaPlayer();
      if (mediaPlayer == null)
        mediaPlayer = new MediaPlayer();
      String musicUrl = appSettings.getServicesBaseUrl() + "/Content/GetMusic?Id=" + song.getId();
      Map<String,String> headers = new HashMap<String,String>();
      String credentials = Base64.encodeToString((appSettings.getServicesAccessUser() + ":" + appSettings.getServicesAccessPassword()).getBytes(), Base64.DEFAULT);
      headers.put("Authorization", "Basic " + credentials);
      mediaPlayer.setDataSource(appSettings.getAppContext(), Uri.parse(musicUrl), headers);
      // TODO async?
      mediaPlayer.prepare();
      mediaPlayer.start();
      stopProgress();
      deviceCurrentlyPlaying = song;
      Toast.makeText(getApplicationContext(), "Playing: " + song.getLabel(), Toast.LENGTH_LONG).show();
      mediaPlayer.setOnCompletionListener(new OnCompletionListener()
      {
        public void onCompletion(MediaPlayer mp)
        {
          onResume();
          List<Work> queue = worksList.getQueue(MediaType.songs);
          if (queue != null && queue.size() > 0)
          {
            int idx = queue.size() - 1;
            Work nextUp = queue.get(idx);
            queue.remove(idx);
            try
            {
              appData.writeQueue(MediaType.songs, worksList.getQueueJson(MediaType.songs));
              playSongOnDevice(nextUp);
            }
            catch (Exception ex)
            {
              if (BuildConfig.DEBUG)
                Log.e(TAG, ex.getMessage(), ex);
              Toast.makeText(getApplicationContext(), "Error: " + ex.toString(), Toast.LENGTH_LONG).show();
            }
          }
          else
          {
            deviceCurrentlyPlaying = null;
          }
        }
      });
    }
    catch (Exception ex)
    {
      if (BuildConfig.DEBUG)
        Log.e(TAG, ex.getMessage(), ex);
      Toast.makeText(getApplicationContext(), "Error: " + ex.toString(), Toast.LENGTH_LONG).show();
    }
  }
